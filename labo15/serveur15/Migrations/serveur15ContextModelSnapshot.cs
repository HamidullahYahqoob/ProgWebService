// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using serveur15.Data;

#nullable disable

namespace serveur15.Migrations
{
    [DbContext(typeof(serveur15Context))]
    partial class serveur15ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DinosaurIncident", b =>
                {
                    b.Property<int>("IncidentsId")
                        .HasColumnType("int");

                    b.Property<int>("InvolvedDinosaursId")
                        .HasColumnType("int");

                    b.HasKey("IncidentsId", "InvolvedDinosaursId");

                    b.HasIndex("InvolvedDinosaursId");

                    b.ToTable("DinosaurIncident");
                });

            modelBuilder.Entity("serveur15.Models.Dinosaur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZookeeperId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZookeeperId");

                    b.ToTable("Dinosaur");
                });

            modelBuilder.Entity("serveur15.Models.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbCasualties")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("serveur15.Models.Zookeeper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zookeeper");
                });

            modelBuilder.Entity("DinosaurIncident", b =>
                {
                    b.HasOne("serveur15.Models.Incident", null)
                        .WithMany()
                        .HasForeignKey("IncidentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("serveur15.Models.Dinosaur", null)
                        .WithMany()
                        .HasForeignKey("InvolvedDinosaursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("serveur15.Models.Dinosaur", b =>
                {
                    b.HasOne("serveur15.Models.Zookeeper", "Zookeeper")
                        .WithMany("Dinosaurs")
                        .HasForeignKey("ZookeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zookeeper");
                });

            modelBuilder.Entity("serveur15.Models.Zookeeper", b =>
                {
                    b.Navigation("Dinosaurs");
                });
#pragma warning restore 612, 618
        }
    }
}
